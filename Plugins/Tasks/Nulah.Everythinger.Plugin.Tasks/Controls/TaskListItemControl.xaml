<UserControl x:Class="Nulah.Everythinger.Plugins.Tasks.Controls.TaskListItemControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Nulah.Everythinger.Plugins.Tasks.Controls"
             mc:Ignorable="d" 
                 xmlns:models="clr-namespace:Nulah.Everythinger.Plugins.Tasks.Models"
              d:DataContext="{d:DesignInstance models:TaskItemViewModel, IsDesignTimeCreatable=True}"
            d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <!--<RowDefinition Height="auto"/>-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.Style>
            <Style TargetType="{x:Type Grid}">
                <Setter Property="Background" Value="Transparent" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSelected}" Value="true">
                        <Setter Property="Background" Value="#FFE0E0E0" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Border>
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Width" Value="5"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="CornerRadius" Value="0,5,5,0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="10" Duration="0:0:0.100"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Width" To="5" Duration="0:0:0.100"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskItemStates.New}">
                            <Setter Property="Background" Value="#FF00FF00"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskItemStates.NotStarted}">
                            <Setter Property="Background" Value="#FF000FF0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskItemStates.InProgress}">
                            <Setter Property="Background" Value="#FF00DCFF"/>
                            <Setter Property="BorderBrush" Value="#FF00DCFF"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskItemStates.Complete}">
                            <Setter Property="Background" Value="#FF23FF00"/>
                            <Setter Property="BorderBrush" Value="#FF23FF00"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TaskState}" Value="{x:Static models:TaskItemStates.Cancelled}">
                            <Setter Property="Background" Value="#FFFF3A00"/>
                            <Setter Property="BorderBrush" Value="#FFFF3A00"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <TextBlock Grid.Column="1" Padding="10,5,5,5" Text="{Binding Name}" FontSize="{DynamicResource TextHeadingSize2}" TextTrimming="{DynamicResource TextBlockTextTrimming}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{DynamicResource ControlTextForeground1}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource ControlTextForegroundDark}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <!--<TextBlock HorizontalAlignment="Right" Grid.Row="2" Text="{Binding LastActionDate}" Foreground="{DynamicResource ControlTextForeground1}"/>-->
    </Grid>
</UserControl>
